<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gcn.heco</groupId>
	<artifactId>heco</artifactId>
	<version>${module.version}</version>
	<name>heco</name>
	<description>Heco</description>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.3.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

<!-- 		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version> -->

		<!-- project version elements -->
		<module.version.major>1</module.version.major>
		<module.version.minor>0</module.version.minor>
		<module.version.hotfix>0</module.version.hotfix>
		<!-- project version name -->
		<module.version>${module.version.major}.${module.version.minor}.${module.version.hotfix}</module.version>
		<!-- version of the APIs (showing in the URL as http://10.0.40.28:9991/gs-program/${api.version}/) -->
		<api.version>v${module.version.major}</api.version>

		<skip.integration.tests>true</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>

		<spring-boot.version>1.4.1.RELEASE</spring-boot.version>
		<spring-boot-plugin.version>1.4.1.RELEASE</spring-boot-plugin.version>
		<spring-cloud-dependencies.version>Brixton.SR5</spring-cloud-dependencies.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>

		<!-- Sonar qube -->
		<jacoco.version>0.7.4.201502262128</jacoco.version>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.junit.reportsPath>${project.basedir}/test-reports</sonar.junit.reportsPath>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${project.basedir}/test-reports/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${project.basedir}/test-reports/jacoco-it.exec</sonar.jacoco.itReportPath>

		<!-- Jsondoc properties -->
		<placeholder.dollar>$</placeholder.dollar>
		<placeholder.jsondoc>{project.build.directory}</placeholder.jsondoc>
		<placeholder.dollar.jsondoc>${placeholder.dollar}${placeholder.jsondoc}</placeholder.dollar.jsondoc>
		<placeholder.apiversion>{api.version}</placeholder.apiversion>
		<placeholder.dollar.apiversion>${placeholder.dollar}${placeholder.apiversion}</placeholder.dollar.apiversion>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Brixton.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>heco</finalName>

		<resources>
			<!-- config properties for eclipse -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.xml</include>
					<include>*.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<!-- config properties for deployment -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.xml</include>
					<include>*.properties</include>
				</includes>
				<targetPath>${basedir}/target/config</targetPath>
				<filtering>true</filtering>
			</resource>
			<!-- copy Jsondoc index.html file -->
			<resource>
				<directory>jsondoc</directory>
				<includes>
					<include>index.html</include>
				</includes>
				<targetPath>${project.build.directory}/jsondoc-ui/${project.artifactId}-api/${project.artifactId}-api-${api.version}</targetPath>
				<filtering>false</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<verbose>true</verbose>
					<fork>true</fork>
					<compilerVersion>1.8</compilerVersion>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Sonar qube plugin config -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- <excludes> -->
							<!-- <exclude>example.*</exclude> -->
							<!-- </excludes> -->
							<!-- <includes> -->
							<!-- <include>example.*</include> -->
							<!-- </includes> -->
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<append>true</append>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- <excludes> -->
							<!-- <exclude>example.*</exclude> -->
							<!-- </excludes> -->
							<!-- <includes> -->
							<!-- <include>example.*</include> -->
							<!-- </includes> -->
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<append>true</append>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<skipTests>${skip.unit.tests}</skipTests>
					<excludes>
						<exclude>integration/**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.15</version>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- <excludes> -->
							<!-- <exclude>example.*</exclude> -->
							<!-- </excludes> -->
							<!-- <includes> -->
							<!-- <include>example.*</include> -->
							<!-- </includes> -->
							<argLine>${failsafeArgLine}</argLine>
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Jsondoc plugin config -->
			<plugin>
				<groupId>org.jsondoc</groupId>
				<artifactId>jsondoc-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-jsondoc</id>
						<phase>package</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<version>${project.version}</version>
							<!-- URL of the service on dev for the playground. -->
							<basePath>http://10.0.40.39:8078</basePath>
							<packages>
 								<!--controllers package -->
								<package>com.gcn.heco.controller</package>
 								<!--json objects package -->
								<package>com.gcn.heco.app.model</package>
							</packages>
							<outputFile>${project.build.directory}/jsondoc-ui/${project.artifactId}-api/${project.artifactId}-api-${api.version}/jsondoc.json</outputFile>
							<scanner>org.jsondoc.springmvc.scanner.Spring4JSONDocScanner</scanner>
							<playgroundEnabled>true</playgroundEnabled>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jsondoc</groupId>
									<artifactId>jsondoc-ui</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/jsondoc-ui/${project.artifactId}-api/${project.artifactId}-api-${api.version}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>${project.build.directory}/jsondoc-ui/${project.artifactId}-api/${project.artifactId}-api-${api.version}/jsondoc-ui.html</include>
					</includes>

					<replacements>
						<!-- Make the Jsondoc html file standalone -->
						<replacement>
							<token>'_JSONDOC_OFFLINE_PLACEHOLDER_'</token>
							<valueFile>${placeholder.dollar.jsondoc}/jsondoc-ui/${project.artifactId}-api/${project.artifactId}-api-${api.version}/jsondoc.json</valueFile>
						</replacement>
						<!-- Remove API version from URL -->
						<replacement>
							<token>{api.version}</token>
							<value></value>
						</replacement>
						<!-- Remove API version from URL -->
						<replacement>
							<token>/$</token>
							<value></value>
						</replacement>
					</replacements>

					<regex>false</regex>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.4.201502262128,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<!-- Fix Jsondoc dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>1.4.3.RELEASE</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<!-- Jsondoc dependencies -->
		<dependency>
			<groupId>org.jsondoc</groupId>
			<artifactId>jsondoc-core</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.jsondoc</groupId>
			<artifactId>jsondoc-ui</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.jsondoc</groupId>
			<artifactId>jsondoc-springmvc</artifactId>
			<version>1.2.17</version>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>javax.xml.bind</groupId> -->
<!-- 			<artifactId>jaxb-api</artifactId> -->
<!-- 			<version>2.2.11</version> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>commons-lang</groupId> -->
<!-- 			<artifactId>commons-lang</artifactId> -->
<!-- 			<version>2.6</version> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>com.fasterxml.jackson.core</groupId> -->
<!-- 			<artifactId>jackson-core</artifactId> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.fasterxml.jackson.core</groupId> -->
<!-- 			<artifactId>jackson-databind</artifactId> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>2.2.1</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>all-tests</id>
			<properties>
				<build.profile.id>all-tests</build.profile.id>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>unit-test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>unit-test</build.profile.id>
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<build.profile.id>integration-test</build.profile.id>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
	</profiles>
</project>